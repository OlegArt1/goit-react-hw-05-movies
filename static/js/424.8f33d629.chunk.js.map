{"version":3,"file":"static/js/424.8f33d629.chunk.js","mappings":"0RAEaA,EAASC,EAAAA,GAAAA,IAAH,0BAGNC,EAAaD,EAAAA,GAAAA,GAAH,qTAcVE,EAAaF,EAAAA,GAAAA,GAAH,iIAMVG,EAAqBH,EAAAA,GAAAA,QAAH,wFAKlBI,EAAkBJ,EAAAA,GAAAA,EAAH,4CAGfK,EAAcL,EAAAA,GAAAA,MAAH,0BAGXM,EAAcN,EAAAA,GAAAA,EAAH,+OAaXO,EAAmBP,EAAAA,GAAAA,GAAH,gQAchBQ,EAAaR,EAAAA,GAAAA,KAAH,oW,SCavB,EA3DqB,WAEjB,OAA8BS,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QAuBR,OArBAE,EAAAA,EAAAA,YAAU,WAEN,IAAMC,EAA2B,mCAAG,8GAILC,EAAAA,EAAAA,IAAmBJ,GAJd,OAItBK,EAJsB,OAM5BN,EAAWM,EAASC,SANQ,gDAU5BC,QAAQC,IAAI,aAAc,KAAMC,QAAU,KAE1CC,MAAM,yBAZsB,yDAAH,qDAejCP,GAEH,GAAE,CAACH,KAGA,SAACb,EAAD,UACwB,IAAnBW,EAAQa,QACL,SAACtB,EAAD,UACKS,EAAQc,KAAI,SAAAC,GAET,OACI,SAACvB,EAAD,WACI,UAACC,EAAD,CAAoBuB,GAAID,EAAKC,GAA7B,WACI,SAACtB,EAAD,WACI,UAACC,EAAD,YACI,SAACC,EAAD,UAAa,qBACb,UAACE,EAAD,CAAYmB,MAAO,CAAEC,MAAO,OAA5B,UAAsCH,EAAKI,OAAO,aAG1D,SAACzB,EAAD,WACI,UAACC,EAAD,YACI,SAACC,EAAD,UAAa,sBACb,UAACE,EAAD,CAAYmB,MAAO,CAAEG,WAAY,IAAKF,MAAO,UAA7C,UAA0DH,EAAKM,QAAQ,gBAM9F,OAGL,SAACxB,EAAD,UAAkB,2BAIjC,C,+LCzEKyB,EAAU,mCAEhBC,EAAAA,EAAAA,SAAAA,QAAyB,gCAElB,IAAMC,EAAc,mCAAG,oGAEHD,EAAAA,EAAAA,IAAA,qCAAwCD,IAFrC,cAEpBf,EAFoB,yBAInBA,EAASQ,MAJU,2CAAH,qDAMdU,EAAiB,mCAAG,WAAMC,GAAN,uFAENH,EAAAA,EAAAA,IAAA,+BAAkCD,EAAlC,iCAAkEI,EAAlE,gCAFM,cAEvBnB,EAFuB,yBAItBA,EAASQ,MAJa,2CAAH,sDAMjBY,EAAa,mCAAG,WAAMzB,GAAN,uFAEFqB,EAAAA,EAAAA,IAAA,gBAAmBrB,EAAnB,oBAAsCoB,EAAtC,oBAFE,cAEnBf,EAFmB,yBAIlBA,EAASQ,MAJS,2CAAH,sDAMba,EAAgB,mCAAG,WAAO1B,GAAP,uFAELqB,EAAAA,EAAAA,IAAA,gBAAmBrB,EAAnB,4BAA8CoB,EAA9C,2BAFK,cAEtBf,EAFsB,yBAIrBA,EAASQ,MAJY,2CAAH,sDAMhBT,EAAkB,mCAAG,WAAOJ,GAAP,uFAEPqB,EAAAA,EAAAA,IAAA,gBAAmBrB,EAAnB,6BAA+CoB,EAA/C,2BAFO,cAExBf,EAFwB,yBAIvBA,EAASQ,MAJc,2CAAH,qD","sources":["components/MovieReviews/MovieReviews.styled.js","components/MovieReviews/MovieReviews.jsx","services/Api.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Review = styled.div`\n\n`;\nexport const ReviewList = styled.ul`\n    padding: 40px 60px 40px 40px;\n    list-style-type: none;\n    background-color: white;\n\n    @media screen and (max-width: 720px)\n    {\n        padding: 35px 60px 40px 40px;\n    }\n    @media screen and (max-width: 520px)\n    {\n        padding: 30px 60px 40px 40px;\n    }\n`;\nexport const ReviewItem = styled.li`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    flex-direction: column;\n`;\nexport const ReviewArticleBlock = styled.article`\n    padding-bottom: 25px;\n    width: 100%;\n    height: auto;\n`;\nexport const ReviewPageBlock = styled.p`\n    padding: 10px;\n`;\nexport const ReviewLabel = styled.label`\n\n`;\nexport const ReviewTitle = styled.b`\n    font-size: 16px;\n    color: darkslategray;\n\n    @media screen and (max-width: 720px)\n    {\n        font-size: 14px;\n    }\n    @media screen and (max-width: 520px)\n    {\n        font-size: 12px;\n    }\n`;\nexport const ReviewTitleError = styled.h3`\n    padding: 40px 0;\n    text-align: center;\n    color: green;\n\n    @media screen and (max-width: 720px)\n    {\n        font-size: 20px;\n    }\n    @media screen and (max-width: 520px)\n    {\n        font-size: 18px;\n    }\n`;\nexport const ReviewText = styled.span`\n    font-family: Arial, Helvetica, sans-serif;\n    font-style: normal;\n    font-weight: 500;\n    font-size: 14px;\n    line-height: 1.8;\n    text-align: center;\n\n    @media screen and (max-width: 720px)\n    {\n        font-size: 12px;\n    }\n    @media screen and (max-width: 520px)\n    {\n        font-size: 10px;\n    }\n`;","import { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { fetchMoviesReviews } from \"services/Api\";\nimport\n{\n    Review,\n    ReviewList,\n    ReviewItem,\n    ReviewArticleBlock,\n    ReviewPageBlock,\n    ReviewLabel,\n    ReviewTitle,\n    ReviewTitleError,\n    ReviewText,\n}\nfrom \"./MovieReviews.styled\";\n\nconst MovieReviews = () =>\n{\n    const [reviews, setReviews] = useState([]);\n    \n    const { movieId } = useParams();\n\n    useEffect(() =>\n    {\n        const fetchDownloadAllMovieReview = async () =>\n        {\n            try\n            {\n                const response = await fetchMoviesReviews(movieId);\n\n                setReviews(response.results);\n            }\n            catch (error)\n            {\n                console.log(\"\\nError - \", error.message + \";\");\n\n                alert(\"Error! Network error!\");\n            }\n        }        \n        fetchDownloadAllMovieReview();\n\n    }, [movieId]);\n\n    return (\n        <Review>\n            {reviews.length !== 0 ?\n                <ReviewList>\n                    {reviews.map(data =>\n                    {\n                        return (\n                            <ReviewItem>\n                                <ReviewArticleBlock id={data.id}>\n                                    <ReviewPageBlock>\n                                        <ReviewLabel>\n                                            <ReviewTitle>Author:&nbsp;&nbsp;</ReviewTitle>\n                                            <ReviewText style={{ color: 'red' }}>{data.author}.</ReviewText>\n                                        </ReviewLabel>\n                                    </ReviewPageBlock>\n                                    <ReviewPageBlock>\n                                        <ReviewLabel>\n                                            <ReviewTitle>Content:&nbsp;&nbsp;</ReviewTitle>\n                                            <ReviewText style={{ lineHeight: 1.5, color: 'indigo' }}>{data.content}.</ReviewText>\n                                        </ReviewLabel>\n                                    </ReviewPageBlock>\n                                </ReviewArticleBlock>\n                            </ReviewItem>\n                        );\n                    })}\n                </ReviewList>\n                :\n                <ReviewTitleError>Reviews is not found!</ReviewTitleError>\n            }\n        </Review>\n    );\n};\nexport default MovieReviews;","import axios from 'axios';\n\nconst API_KEY = \"34e68a416eb051ec4adf34df5a0038fd\";\n\naxios.defaults.baseURL = \"https://api.themoviedb.org/3/\";\n\nexport const fetchAllMovies = async () =>\n{\n    const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n\n    return response.data;\n};\nexport const fetchMoviesSearch = async searchText =>\n{\n    const response = await axios.get(`search/movie?api_key=${API_KEY}&language=en-US&query=${searchText}&page=1&include_adult=false`);\n\n    return response.data;\n};\nexport const fetchMoviesId = async movieId =>\n{\n    const response = await axios.get(`movie/${movieId}?api_key=${API_KEY}&language=en-US`);\n\n    return response.data;\n};\nexport const fetchMoviesCasts = async (movieId) =>\n{\n    const response = await axios.get(`movie/${movieId}/credits?api_key=${API_KEY}&language=en-US&page=1`);\n\n    return response.data;\n};\nexport const fetchMoviesReviews = async (movieId) =>\n{\n    const response = await axios.get(`movie/${movieId}}/reviews?api_key=${API_KEY}&language=en-US&page=1`);\n\n    return response.data;\n};"],"names":["Review","styled","ReviewList","ReviewItem","ReviewArticleBlock","ReviewPageBlock","ReviewLabel","ReviewTitle","ReviewTitleError","ReviewText","useState","reviews","setReviews","movieId","useParams","useEffect","fetchDownloadAllMovieReview","fetchMoviesReviews","response","results","console","log","message","alert","length","map","data","id","style","color","author","lineHeight","content","API_KEY","axios","fetchAllMovies","fetchMoviesSearch","searchText","fetchMoviesId","fetchMoviesCasts"],"sourceRoot":""}