{"version":3,"file":"static/js/34.ccc9d073.chunk.js","mappings":"uNAoEA,UAtDa,WAET,OAA4BA,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,MAEAC,EAAAA,EAAAA,YAAU,WAENC,GAEH,GAAE,IAEH,IAAMA,EAAsB,mCAAG,8GAIAC,EAAAA,EAAAA,MAJA,OAIjBC,EAJiB,OAMvBN,EAAUM,EAASC,SAEnBL,GAAa,GARU,gDAYvBM,QAAQC,IAAI,aAAc,KAAMC,QAAU,KAZnB,yBAgBvBR,GAAa,GAhBU,4EAAH,qDAmB5B,OACI,yBACKD,GACG,SAAC,KAAD,UAAoB,gBAEnB,UAAC,KAAD,YACG,SAAC,KAAD,UAAW,oBACX,SAAC,KAAD,UACKF,EAAOY,KAAI,SAAAC,GAER,OACI,SAAC,KAAD,WACI,SAAC,KAAD,WACI,SAAC,KAAD,CAAUC,GAAE,kBAAaD,EAAKE,IAA9B,SAAqCF,EAAKG,WAFnCH,EAAKE,GAM3B,UAMxB,C,mPChEYE,EAAgBC,EAAAA,GAAAA,IAAH,0BAGbC,EAAOD,EAAAA,GAAAA,GAAH,0NAYJE,EAAWF,EAAAA,GAAAA,GAAH,+JAORG,EAAYH,EAAAA,GAAAA,IAAH,oTAeTI,EAAYJ,EAAAA,GAAAA,GAAH,uSAeTK,EAAqBL,EAAAA,GAAAA,GAAH,yEAIlBM,GAAWN,EAAAA,EAAAA,IAAOO,EAAAA,GAAPP,CAAH,oZ,+LCzDfQ,EAAU,mCAEhBC,EAAAA,EAAAA,SAAAA,QAAyB,gCAElB,IAAMrB,EAAc,mCAAG,oGAEHqB,EAAAA,EAAAA,IAAA,qCAAwCD,IAFrC,cAEpBnB,EAFoB,yBAInBA,EAASM,MAJU,2CAAH,qDAMde,EAAiB,mCAAG,WAAMC,GAAN,uFAENF,EAAAA,EAAAA,IAAA,+BAAkCD,EAAlC,iCAAkEG,EAAlE,gCAFM,cAEvBtB,EAFuB,yBAItBA,EAASM,MAJa,2CAAH,sDAMjBiB,EAAa,mCAAG,WAAMC,GAAN,uFAEFJ,EAAAA,EAAAA,IAAA,gBAAmBI,EAAnB,oBAAsCL,EAAtC,oBAFE,cAEnBnB,EAFmB,yBAIlBA,EAASM,MAJS,2CAAH,sDAMbmB,EAAgB,mCAAG,WAAOD,GAAP,uFAELJ,EAAAA,EAAAA,IAAA,gBAAmBI,EAAnB,4BAA8CL,EAA9C,2BAFK,cAEtBnB,EAFsB,yBAIrBA,EAASM,MAJY,2CAAH,sDAMhBoB,EAAkB,mCAAG,WAAOF,GAAP,uFAEPJ,EAAAA,EAAAA,IAAA,gBAAmBI,EAAnB,6BAA+CL,EAA/C,2BAFO,cAExBnB,EAFwB,yBAIvBA,EAASM,MAJc,2CAAH,qD","sources":["pages/MovieHome/MovieHome.jsx","pages/MovieHome/MovieHome.styled.js","services/Api.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { fetchAllMovies } from \"services/Api\";\nimport\n{\n    ListContainer,\n    List,\n    ListItem,\n    ListBlock,\n    ListTitle,\n    ListTitleIndicator,\n    ListLink,\n}\nfrom \"./MovieHome.styled\";\n\nconst Home = () =>\n{\n    const [MOVIES, setMovies] = useState([]);\n    const [isLoading, setIsLoading] = useState(true);\n\n    useEffect(() =>\n    {\n        fetchDownloadAllMovies();\n\n    }, []);\n    \n    const fetchDownloadAllMovies = async () =>\n    {\n        try\n        {\n            const response = await fetchAllMovies();\n\n            setMovies(response.results);\n            \n            setIsLoading(true);\n        }\n        catch (error)\n        {\n            console.log(\"\\nError - \", error.message + \";\");\n        }\n        finally\n        {\n            setIsLoading(false);\n        }\n    }\n    return (\n        <div>\n            {isLoading ?\n                <ListTitleIndicator>Loading...</ListTitleIndicator>\n                :\n                (<ListContainer>\n                    <ListTitle>Trending today</ListTitle>\n                    <List>\n                        {MOVIES.map(data =>\n                        {\n                            return (\n                                <ListItem key={data.id}>\n                                    <ListBlock>\n                                        <ListLink to={`/movies/${data.id}`}>{data.title}</ListLink>\n                                    </ListBlock>\n                                </ListItem>\n                            );\n                        })}\n                    </List>\n                </ListContainer>)\n            }\n        </div>\n    );\n};\nexport default Home;","import styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nexport const ListContainer = styled.div`\n\n`;\nexport const List = styled.ol`\n    margin: 50px 80px;\n\n    @media screen and (max-width: 720px)\n    {\n        margin: 40px 60px;\n    }\n    @media screen and (max-width: 520px)\n    {\n        margin: 30px 40px;\n    }\n`;\nexport const ListItem = styled.li`\n    display: flex;\n    align-items: flex-start;\n    justify-content: flex-start;\n    flex-direction: column;\n    flex-wrap: wrap;\n`;\nexport const ListBlock = styled.div`\n    padding-top: 10px;\n    padding-bottom: 10px;\n    \n    @media screen and (max-width: 720px)\n    {\n        padding-top: 8px;\n        padding-bottom: 8px;\n    }\n    @media screen and (max-width: 520px)\n    {\n        padding-top: 6px;\n        padding-bottom: 6px; \n    }\n`;\nexport const ListTitle = styled.h1`\n    padding-top: 40px;\n    text-align: center;\n\n    @media screen and (max-width: 720px)\n    {\n        padding-top: 30px;\n        font-size: 28px;\n    }\n    @media screen and (max-width: 520px)\n    {\n        padding-top: 20px;\n        font-size: 22px;\n    }\n`;\nexport const ListTitleIndicator = styled.h1`\n    margin-top: 200px;\n    text-align: center;\n`;\nexport const ListLink = styled(Link)`\n    transition: color 150ms cubic-bezier(0.4, 0, 0.2, 1) 150ms;\n    font-size: 16px;\n    color: black;\n\n    @media screen and (max-width: 720px)\n    {\n        font-size: 14px;\n    }\n    @media screen and (max-width: 520px)\n    {\n        font-size: 12px;\n    }\n    &:hover, &:focus\n    {\n        color: blue;\n    }\n    &:active\n    {\n        color: green;\n    }\n`;","import axios from 'axios';\n\nconst API_KEY = \"34e68a416eb051ec4adf34df5a0038fd\";\n\naxios.defaults.baseURL = \"https://api.themoviedb.org/3/\";\n\nexport const fetchAllMovies = async () =>\n{\n    const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n\n    return response.data;\n};\nexport const fetchMoviesSearch = async searchText =>\n{\n    const response = await axios.get(`search/movie?api_key=${API_KEY}&language=en-US&query=${searchText}&page=1&include_adult=false`);\n\n    return response.data;\n};\nexport const fetchMoviesId = async movieId =>\n{\n    const response = await axios.get(`movie/${movieId}?api_key=${API_KEY}&language=en-US`);\n\n    return response.data;\n};\nexport const fetchMoviesCasts = async (movieId) =>\n{\n    const response = await axios.get(`movie/${movieId}/credits?api_key=${API_KEY}&language=en-US&page=1`);\n\n    return response.data;\n};\nexport const fetchMoviesReviews = async (movieId) =>\n{\n    const response = await axios.get(`movie/${movieId}}/reviews?api_key=${API_KEY}&language=en-US&page=1`);\n\n    return response.data;\n};"],"names":["useState","MOVIES","setMovies","isLoading","setIsLoading","useEffect","fetchDownloadAllMovies","fetchAllMovies","response","results","console","log","message","map","data","to","id","title","ListContainer","styled","List","ListItem","ListBlock","ListTitle","ListTitleIndicator","ListLink","Link","API_KEY","axios","fetchMoviesSearch","searchText","fetchMoviesId","movieId","fetchMoviesCasts","fetchMoviesReviews"],"sourceRoot":""}