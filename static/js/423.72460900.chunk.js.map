{"version":3,"file":"static/js/423.72460900.chunk.js","mappings":"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","sources":["pages/MovieDetails/MovieDelails.styled.js","components/MovieInfo/MovieInfo.styled.js","components/MovieInfo/MovieInfo.jsx","pages/MovieDetails/MovieDetails.jsx","services/Api.jsx"],"sourcesContent":["import styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nexport const Movie = styled.div`\n    padding: 20px 40px;\n`;\nexport const MovieLink = styled(Link)`\n    font-size: 16px;  \n    text-align: center;\n    text-decoration: none;\n    color: blue;\n\n    &:hover, &:focus, &:active\n    {\n        color: magenta;\n    }\n    @media screen and (max-width: 720px)\n    {\n        font-size: 14px;\n    }\n    @media screen and (max-width: 520px)\n    {\n        font-size: 12px;\n    }\n`;\nexport const MovieLinkBlock = styled.div`\n    margin-top: 50px;\n    margin-bottom: 20px;\n    display: flex;\n    justify-content: center;\n    gap: 15px;\n    font-size: 18px;\n\n    @media screen and (max-width: 720px)\n    {\n        gap: 10px;\n    }\n    @media screen and (max-width: 520px)\n    {\n        gap: 5px;\n    }\n`;\nexport const MovieLinkPage = styled(Link)`\n    padding: 5px 0;\n    width: 100px;\n    height: auto;\n    font-size: 16px;  \n    text-align: center;\n    text-decoration: none;\n    box-shadow: 0px 0px 5px rgba(0, 0, 0, 0.2);\n    border: 2px solid magenta;\n    background-color: magenta;\n    color: white;\n\n    &:hover, &:focus, &:active\n    {\n        border: 2px solid aqua;\n        background-color: aqua;\n    }\n    @media screen and (max-width: 720px)\n    {\n        width: 80px;\n        font-size: 14px;\n    }\n    @media screen and (max-width: 520px)\n    {\n        width: 60px;\n        fon-size: 12px;\n    }\n`;\nexport const MovieTitleInfo = styled.h1`\n    margin: 20px 0;\n    font-size: 25px;\n    text-align: center;\n    color: blue;\n\n    @media screen and (max-width: 720px)\n    {\n        font-size: 22px;\n    }\n    @media screen and (max-width: 520px)\n    {\n        margin: 20px 0 10px 0;\n        font-size: 20px;\n    }\n`;\nexport const MovieTitleIndicator = styled.h1`\n    margin-top: 200px;\n    text-align: center;\n`;","import styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nexport const Movie = styled.div`\n\n`;\nexport const MovieArticleBlock = styled.article`\n    width: 100%;\n    height: auto;\n    display: flex;\n    align-items: flex-start;\n    background-color: white;\n`;\nexport const MovieMainBlock = styled.div`\n    padding: 20px;\n`;\nexport const MoviePageBlock = styled.p`\n    margin: 15px;\n`;\nexport const MovieLinkBlock = styled.div`\n    margin-top: 50px;\n    margin-bottom: 20px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    gap: 5px;\n    font-size: 18px;\n`;\nexport const MovieImage = styled.img`\n    margin: 35px auto;\n    width: 30%;\n    height: auto;\n\n    @media screen and (max-width: 720px)\n    {\n        width: 60%;\n        height: auto;\n    }\n    @media screen and (max-width: 520px)\n    {\n        width: 40%;\n        height: auto;\n    }\n`;\nexport const MovieLabel = styled.label`\n    display: flex;\n    justify-content: center;\n    flex-direction: column;\n`;\nexport const MovieLink = styled(Link)`\n    width: 70px;\n    height: auto;\n    padding: 5px 0;\n    font-size: 16px;  \n    text-align: center;\n    text-decoration: none;\n    box-shadow: 0px 0px 5px rgba(0, 0, 0, 0.2);\n    border: 2px solid magenta;\n    background-color: magenta;\n    color: white;\n\n    &:hover, &:focus, &:active\n    {\n        border: 2px solid aqua;\n        background-color: aqua;\n    }\n    @media screen and (max-width: 720px)\n    {\n        width: 60px;\n        font-size: 14px;\n    }\n    @media screen and (max-width: 520px)\n    {\n        fon-size: 12px;\n    }\n`;\nexport const MovieTitle = styled.h3`\n    padding: 20px 0;\n    color: darkslategray;\n\n    @media screen and (max-width: 720px)\n    {\n        font-size: 16px;\n    }\n    @media screen and (max-width: 520px)\n    {\n        font-size: 14px;\n    }\n`;\nexport const MovieTitleInfo = styled.h1`\n    margin: 20px 0;\n    font-size: 25px;\n    text-align: center;\n    color: blue;\n\n    @media screen and (max-width: 720px)\n    {\n        font-size: 22px;\n    }\n    @media screen and (max-width: 520px)\n    {\n        margin: 20px 0 10px 0;\n        font-size: 20px;\n    }\n`;\nexport const MovieTitleError = styled.h3`\n    padding: 40px 0;\n    text-align: center;\n    color: green;\n\n    @media screen and (max-width: 720px)\n    {\n        font-size: 20px;\n    }\n    @media screen and (max-width: 520px)\n    {\n        font-size: 18px;\n    }\n`;\nexport const MovieNameText = styled.h2`\n    font-family: Arial, Helvetica, sans-serif;\n    color: red;\n\n    @media screen and (max-width: 720px)\n    {\n        font-size: 18px;\n    }\n    @media screen and (max-width: 520px)\n    {\n        font-size: 16px;\n    }\n`;\nexport const MoviePercentageText = styled.span`\n    padding-top: 26px;\n    font-family: Arial, Helvetica, sans-serif;\n    font-size: 16px;\n    color: gray;\n\n    @media screen and (max-width: 720px)\n    {\n        font-size: 13px;\n    }\n    @media screen and (max-width: 520px)\n    {\n        font-size: 12px;\n    }\n`;\nexport const MovieOverviewText = styled.span`\n    font-family: Arial, Helvetica, sans-serif;\n    line-height: 1.8;\n    font-size: 14px;\n    color: indigo;\n\n    @media screen and (max-width: 720px)\n    {\n        font-size: 13px;\n    }\n    @media screen and (max-width: 520px)\n    {\n        font-size: 12px;\n    }\n`;\nexport const MovieGenresText = styled.span`\n    font-family: Arial, Helvetica, sans-serif;\n    font-size: 14px;\n    color: green;\n\n    @media screen and (max-width: 720px)\n    {\n        font-size: 13px;\n    }\n    @media screen and (max-width: 520px)\n    {\n        font-size: 12px;\n    }\n`;\nexport const MovieTitleIndicator = styled.h1`\n    margin-top: 200px;\n    text-align: center;\n`;","import PropTypes from \"prop-types\";\nimport\n{\n    Movie,\n    MovieArticleBlock,\n    MovieMainBlock,\n    MoviePageBlock,\n    MovieImage,\n    MovieLabel,\n    MovieTitle,\n    MovieTitleIndicator,\n    MovieTitleError,\n    MovieNameText,\n    MoviePercentageText,\n    MovieOverviewText,\n    MovieGenresText,\n}\nfrom \"./MovieInfo.styled\";\n\nconst url = \"https://image.tmdb.org/t/p/original/\";\n\nconst MovieInfo = ({ movieInfo }) =>\n{\n    const { title, genres, overview, poster_path, release_date, vote_average } = movieInfo;\n\n    const releaseDate = new Date(release_date);\n\n    if (!title) return <MovieTitleIndicator>Loading...</MovieTitleIndicator>;\n    \n    return (\n        <Movie>\n            <MovieArticleBlock>\n                {poster_path !== null ?\n                    <>\n                        <MovieImage src={url + poster_path} title={title} alt={title}/>\n                    </>\n                    :\n                    <MovieTitleError>Image is not found!</MovieTitleError>\n                }\n                <MovieMainBlock>\n                    <MoviePageBlock>\n                        <MovieLabel>\n                            {releaseDate.getFullYear() !== 'NaN' ?\n                            <MovieNameText>{title} {releaseDate.getFullYear()}.</MovieNameText>\n                            :\n                            <MovieNameText>{title} {\"(-)\"}.</MovieNameText>}\n                        </MovieLabel>\n                    </MoviePageBlock>\n                    <MoviePageBlock>\n                        <MovieLabel style={{ display: 'flex', alignItems: 'center', justifyContent: 'flex-start', flexDirection: 'row' }}>\n                            <MovieTitle style={{ paddingBottom: 0 }}>User scere:&nbsp;&nbsp;</MovieTitle>\n                            <MoviePercentageText>{(vote_average * 10).toFixed()}%;</MoviePercentageText>\n                        </MovieLabel>\n                    </MoviePageBlock>\n                    <MoviePageBlock>\n                        <MovieLabel>\n                            <MovieTitle>Overview</MovieTitle>\n                            <MovieOverviewText>{overview}</MovieOverviewText>\n                        </MovieLabel>\n                    </MoviePageBlock>\n                    <MoviePageBlock>\n                        <MovieLabel>\n                            <MovieTitle>Genres</MovieTitle>\n                            <MovieGenresText>\n                                {genres.map(genre => genre.name).join(', ')};\n                            </MovieGenresText>\n                        </MovieLabel>\n                    </MoviePageBlock>\n                </MovieMainBlock>\n            </MovieArticleBlock>\n        </Movie>\n    );\n};\nMovieInfo.propTypes =\n{\n    movie: PropTypes.shape({\n        title: PropTypes.string.isRequired,\n        genres: PropTypes.string.isRequired,\n        overview: PropTypes.string,\n        poster_path: PropTypes.string.isRequired,\n        release_date: PropTypes.string.isRequired,\n        vote_average: PropTypes.number,\n    }).isRequired,\n};\nexport default MovieInfo;","import { Suspense, useEffect, useState } from \"react\";\nimport { useParams, Outlet, useLocation } from \"react-router-dom\";\nimport { fetchMoviesId } from \"services/Api\";\nimport MovieInfo from \"components/MovieInfo/MovieInfo\";\nimport\n{\n    Movie,\n    MovieTitleInfo,\n    MovieTitleIndicator,\n    MovieLinkBlock,\n    MovieLinkPage,\n    MovieLink,\n}\nfrom \"./MovieDelails.styled\";\n\nconst MovieDelails = () =>\n{\n    const [movie, setMovie] = useState({});\n\n    const location = useLocation();\n    \n    const { movieId } = useParams();\n\n    useEffect(() =>\n    {\n        fetchSelectedMovie(movieId);\n\n    }, [movieId]);\n\n    const fetchSelectedMovie = async (movieId) =>\n    {\n        try\n        {\n            const movieData = await fetchMoviesId(movieId);\n            \n            setMovie(movieData);\n        }\n        catch (error)\n        {\n            console.log(\"\\nError - \", error.message + \";\");\n        }\n    }\n    return (\n        <main>\n            <Movie>\n                <MovieLink to={location.state?.from ?? '/'}>Go back</MovieLink>\n                <MovieInfo movieInfo={movie}/>\n                <MovieTitleInfo>Additional information</MovieTitleInfo>\n                <MovieLinkBlock>\n                    <MovieLinkPage to=\"cast\" state={{ from: location.state?.from }}>Cast</MovieLinkPage>\n                    <MovieLinkPage to=\"reviews\" state={{ from: location.state?.from }}>Reviews</MovieLinkPage>\n                </MovieLinkBlock>\n                <Suspense fallback={<MovieTitleIndicator>Loading...</MovieTitleIndicator>}>\n                    <Outlet />\n                </Suspense>\n            </Movie>\n        </main>\n    );\n};\nexport default MovieDelails;","import axios from 'axios';\n\nconst API_KEY = \"34e68a416eb051ec4adf34df5a0038fd\";\n\naxios.defaults.baseURL = \"https://api.themoviedb.org/3/\";\n\nexport const fetchAllMovies = async () =>\n{\n    const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n\n    return response.data;\n};\nexport const fetchMoviesSearch = async searchText =>\n{\n    const response = await axios.get(`search/movie?api_key=${API_KEY}&language=en-US&query=${searchText}&page=1&include_adult=false`);\n\n    return response.data;\n};\nexport const fetchMoviesId = async movieId =>\n{\n    const response = await axios.get(`movie/${movieId}?api_key=${API_KEY}&language=en-US`);\n\n    return response.data;\n};\nexport const fetchMoviesCasts = async (movieId) =>\n{\n    const response = await axios.get(`movie/${movieId}/credits?api_key=${API_KEY}&language=en-US&page=1`);\n\n    return response.data;\n};\nexport const fetchMoviesReviews = async (movieId) =>\n{\n    const response = await axios.get(`movie/${movieId}}/reviews?api_key=${API_KEY}&language=en-US&page=1`);\n\n    return response.data;\n};"],"names":["Movie","styled","MovieLink","Link","MovieLinkBlock","MovieLinkPage","MovieTitleInfo","MovieTitleIndicator","MovieArticleBlock","MovieMainBlock","MoviePageBlock","MovieImage","MovieLabel","MovieTitle","MovieTitleError","MovieNameText","MoviePercentageText","MovieOverviewText","MovieGenresText","movieInfo","title","genres","overview","poster_path","release_date","vote_average","releaseDate","Date","src","alt","getFullYear","style","display","alignItems","justifyContent","flexDirection","paddingBottom","toFixed","map","genre","name","join","useState","movie","setMovie","location","useLocation","movieId","useParams","useEffect","fetchSelectedMovie","fetchMoviesId","movieData","console","log","message","to","state","from","Suspense","fallback","API_KEY","axios","fetchAllMovies","response","data","fetchMoviesSearch","searchText","fetchMoviesCasts","fetchMoviesReviews"],"sourceRoot":""}