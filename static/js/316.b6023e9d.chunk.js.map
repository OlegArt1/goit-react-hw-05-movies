{"version":3,"file":"static/js/316.b6023e9d.chunk.js","mappings":"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","sources":["components/MovieCast/MovieCast.styled.js","components/MovieCast/MovieCast.jsx","services/Api.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Cast = styled.div`\n\n`;\nexport const CastList = styled.ul`\n    padding-top: 40px;\n    padding-bottom: 40px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    flex-direction: row;\n    flex-wrap: wrap;\n    gap: 0px;\n    list-style-type: none;\n    background-color: white;\n\n    @media screen and (max-width: 720px)\n    {\n        padding-top: 50px;\n        padding-bottom: 50px;\n    }\n    @media screen and (max-width: 520px)\n    {\n        padding-top: 35px;\n        padding-bottom: 10px;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        flex-direction: column;\n    }\n`;\nexport const CastItem = styled.li`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    flex-direction: column;\n`;\nexport const CastArticleBlock = styled.article`\n    padding: 20px 0;\n    width: 100%;\n    height: 300px;\n    display: flex;\n    align-items: center;\n\n    @media screen and (max-width: 720px)\n    {\n        padding: 0;\n        height: 220px;\n    }\n    @media screen and (max-width: 520px)\n    {\n        display: block;\n        height: 400px;\n    }\n`;\nexport const CastMainBlock = styled.div`\n    margin: 0 40px;\n\n    @media screen and (max-width: 720px)\n    {\n        margin: 0;\n    }\n    @media screen and (max-width: 520px)\n    {\n        margin-left: 50px;\n    }\n`;\nexport const CastPageBlock = styled.p`\n    padding: 10px;\n\n    @media screen and (max-width: 720px)\n    {\n        padding-left: 40px;\n    }\n    @media screen and (max-width: 520px)\n    {\n        padding: 5px;\n    }\n`;\nexport const CastIconBlock = styled.label`\n    margin-left: 10px;\n    width: 90px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n`;\nexport const CastImage = styled.img`\n    width: 200px;\n    height: 300px;\n\n    @media screen and (max-width: 720px)\n    {\n        width: 150px;\n        height: 200px;\n    }\n    @media screen and (max-width: 520px)\n    {\n        margin: 20px 40px;\n        width: auto;\n        height: 250px;\n    }\n`;\nexport const CastLabel = styled.label`\n    margin-left: 0;\n`;\nexport const CastTitle = styled.b`\n    font-size: 16px;\n    color: darkslategray;\n\n    @media screen and (max-width: 720px)\n    {\n        font-size: 14px;\n    }\n    @media screen and (max-width: 520px)\n    {\n        font-size: 12px;\n    }\n`;\nexport const CastTitleError = styled.h3`\n    padding: 40px 0;\n    text-align: center;\n    color: green;\n\n    @media screen and (max-width: 720px)\n    {\n        font-size: 20px;\n    }\n    @media screen and (max-width: 520px)\n    {\n        font-size: 18px;\n    }\n`;\nexport const CastText = styled.span`\n    font-family: Arial, Helvetica, sans-serif;\n    font-style: normal;\n    font-weight: 500;\n    font-size: 14px;\n    line-height: 1.8;\n\n    @media screen and (max-width: 720px)\n    {\n        font-size: 12px;\n    }\n    @media screen and (max-width: 520px)\n    {\n        font-size: 10px;\n    }\n`;\nexport const CastIcon = styled.svg`\n    margin-top: -10px;\n    width: 30px;\n    height: 30px;\n    vertical-align: middle;\n\n    @media screen and (max-width: 720px)\n    {\n        width: 0;\n        height: 0;\n    }\n    @media screen and (max-width: 520px)\n    {\n        width: 0;\n        height: 0;\n    }\n`;","import { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { fetchMoviesCasts } from \"services/Api\";\nimport\n{\n    Cast,\n    CastList,\n    CastItem,\n    CastArticleBlock,\n    CastMainBlock,\n    CastPageBlock,\n    CastIconBlock,\n    CastImage,\n    CastLabel,\n    CastTitle,\n    CastTitleError,\n    CastText,\n    CastIcon,\n}\nfrom \"./MovieCast.styled\";\n\nconst imageUrl = \"https://image.tmdb.org/t/p/original/\";\n\nconst MovieCast = () =>\n{\n    const [cast, setCast] = useState([]);\n    \n    const { movieId } = useParams();\n\n    useEffect(() =>\n    {\n        const fetchDownloadAllMovieCast = async () =>\n        {\n            try\n            {\n                const response = await fetchMoviesCasts(movieId);\n\n                setCast(response.cast);\n            }\n            catch (error)\n            {\n                console.log(\"\\n Error - \", error.message + \";\");\n\n                alert(\"Error! Network error!\");\n            }\n        }        \n        fetchDownloadAllMovieCast();\n\n    }, [movieId]);\n\n    return (\n        <Cast>\n            {cast.length !== 0 ?\n                <CastList>\n                    {cast.map(data =>\n                    {\n                        return (                      \n                            <CastItem id={data.credit_id}>\n                                {data.profile_path !== null &&\n                                    (<CastArticleBlock id={data.id}>\n                                        <CastImage id={data.cast_id} src={imageUrl + data.profile_path} title={data.name} alt={data.name}/>\n                                        <CastMainBlock>\n                                            <CastPageBlock>\n                                                <CastLabel>\n                                                    <CastTitle>Name:&nbsp;&nbsp;</CastTitle>\n                                                    <CastText style={{ color: 'red' }}>{data.name};</CastText>\n                                                </CastLabel>\n                                            </CastPageBlock>\n                                            <CastPageBlock>\n                                                <CastLabel>\n                                                    <CastTitle>Character:&nbsp;&nbsp;</CastTitle>\n                                                    <CastText style={{ color: 'blue' }}>{data.character};</CastText>\n                                                </CastLabel>\n                                            </CastPageBlock>\n                                            <CastPageBlock>\n                                                <CastLabel style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"flex-start\", flexDirection: \"row\" }}>\n                                                    <CastTitle>Popularity:&nbsp;&nbsp;</CastTitle>\n                                                    <CastText style={{ color: 'green' }}>{data.popularity};</CastText>\n                                                    <CastIconBlock>\n                                                        <CastIcon>\n                                                            <path d=\"M32 12.408l-11.056-1.607-4.944-10.018-4.944 10.018-11.056 1.607 8 7.798-1.889 11.011 9.889-5.199 9.889 5.199-1.889-11.011 8-7.798z\" fill=\"orange\"/>\n                                                        </CastIcon>\n                                                        <CastIcon>\n                                                            <path d=\"M32 12.408l-11.056-1.607-4.944-10.018-4.944 10.018-11.056 1.607 8 7.798-1.889 11.011 9.889-5.199 9.889 5.199-1.889-11.011 8-7.798z\" fill=\"orange\"/>\n                                                        </CastIcon>\n                                                        <CastIcon>\n                                                            <path d=\"M32 12.408l-11.056-1.607-4.944-10.018-4.944 10.018-11.056 1.607 8 7.798-1.889 11.011 9.889-5.199 9.889 5.199-1.889-11.011 8-7.798z\" fill=\"orange\"/>\n                                                        </CastIcon>\n                                                    </CastIconBlock>\n                                                </CastLabel>\n                                            </CastPageBlock>\n                                        </CastMainBlock>\n                                    </CastArticleBlock>\n                                )}\n                            </CastItem>\n                        );\n                    })}\n                </CastList>\n                :\n                <CastTitleError>Casts is not found!</CastTitleError>\n            }\n        </Cast>\n    );\n};\nexport default MovieCast;","import axios from 'axios';\n\nconst API_KEY = \"34e68a416eb051ec4adf34df5a0038fd\";\n\naxios.defaults.baseURL = \"https://api.themoviedb.org/3/\";\n\nexport const fetchAllMovies = async () =>\n{\n    const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n\n    return response.data;\n};\nexport const fetchMoviesSearch = async searchText =>\n{\n    const response = await axios.get(`search/movie?api_key=${API_KEY}&language=en-US&query=${searchText}&page=1&include_adult=false`);\n\n    return response.data;\n};\nexport const fetchMoviesId = async movieId =>\n{\n    const response = await axios.get(`movie/${movieId}?api_key=${API_KEY}&language=en-US`);\n\n    return response.data;\n};\nexport const fetchMoviesCasts = async (movieId) =>\n{\n    const response = await axios.get(`movie/${movieId}/credits?api_key=${API_KEY}&language=en-US&page=1`);\n\n    return response.data;\n};\nexport const fetchMoviesReviews = async (movieId) =>\n{\n    const response = await axios.get(`movie/${movieId}}/reviews?api_key=${API_KEY}&language=en-US&page=1`);\n\n    return response.data;\n};"],"names":["Cast","styled","CastList","CastItem","CastArticleBlock","CastMainBlock","CastPageBlock","CastIconBlock","CastImage","CastLabel","CastTitle","CastTitleError","CastText","CastIcon","useState","cast","setCast","movieId","useParams","useEffect","fetchDownloadAllMovieCast","fetchMoviesCasts","response","console","log","message","alert","length","map","data","id","credit_id","profile_path","cast_id","src","title","name","alt","style","color","character","display","alignItems","justifyContent","flexDirection","popularity","d","fill","API_KEY","axios","fetchAllMovies","fetchMoviesSearch","searchText","fetchMoviesId","fetchMoviesReviews"],"sourceRoot":""}